===========Create Function=========

create or replace FUNCTION GET_EMPLOYEENAME(EMPID NUMBER) 
RETURN VARCHAR2
IS
    OUTPUT VARCHAR2(200);
    CURSOR C1 IS SELECT ENAME FROM EMP WHERE EMPNO=EMPID;
BEGIN
OPEN C1;
FETCH C1 INTO OUTPUT;
RETURN OUTPUT;

END;

=========Create View====================



CREATE OR REPLACE VIEW GET_EMPLOYEE_DEPRATMENTDATA AS
select EMPLOYEE.EMPNO EmployeeID,EMPLOYEE.ENAME EmployeeName,DEP.DEPT_CODE DepartMentCode,
DEP.DEPT_NAME DepartmentName
from EMP EMPLOYEE 
INNER JOIN DEPARTMENT_MASTERS DEP ON DEP.DEPT_CODE=EMPLOYEE.DEPTNO;

select  * from GET_EMPLOYEE_DEPRATMENTDATA

=========================Grant Permission to user

GRANT create VIEW TO SCOTT


=========Create Procedure===============

create or replace PROCEDURE GET_STUDENT_DATA(Code IN NUMBER,OUTPUT OUT SYS_REFCURSOR) 
AS 
BEGIN
OPEN OUTPUT FOR 
select  
SM.Student_Code AS STUDENT_CODE,
SM.STUDENT_NAME,
SMR.Subject1,
SMR.SUBJECT2,
SMR.SUBJECT3 
from STUDENT_MASTERS SM 
INNER JOIN STUDENT_MARKS SMR ON SM.STUDENT_CODE=SMR.STUDENT_CODE
WHERE SM.Student_Code=Code;
END;

==========

create or replace PROCEDURE GET_EMPDEPT_DATABYDEPTCODE(Dept_Code IN NUMBER,OUTPUT OUT SYS_REFCURSOR) 
AS 
BEGIN
OPEN OUTPUT FOR select  * from GET_EMPLOYEE_DEPRATMENTDATA WHERE DEPARTMENTID=Dept_Code;
END;


select EMPLOYEE.EMPNO,EMPLOYEE.ENAME,DEP.DEPT_CODE,DEP.DEPT_NAME from EMP EMPLOYEE 
INNER JOIN DEPARTMENT_MASTERS DEP ON DEP.DEPT_CODE=EMPLOYEE.DEPTNO;


=====Anonymous Block========
DECLARE
/* declare the variables*/
Number1 Number;
Number2 Number;
Number3 Number;

BEGIN

Number1:=1;
Number2:=3;
Number3:=Number1+Number2;
DBMS_OUTPUT.PUT_LINE(Number3);
END;


=====================IMPLICIT CURSOR========



DECLARE
 total_rows number;
Begin
Update CUSTOMER
 Set Salary=Salary+500 where ID=1;
 if(sql%notfound) THEN
  DBMS_OUTPUT.PUT_LINE('No CUstomer selected');
 ELSIF(sql%found) THEN
 total_rows:=sql%rowcount;
 DBMS_OUTPUT.PUT_LINE(total_rows || ' Customers selected');
 END IF;
END;

========================EXPLICIT CURSOR===========

DECLARE
    CID     CUSTOMER.ID%TYPE;
    CNAME   CUSTOMER.NAME%TYPE;
    CURSOR C_CUSTOMER IS
    SELECT
        ID,
        NAME
    FROM
        CUSTOMER;

BEGIN
    OPEN C_CUSTOMER;
    LOOP
        FETCH C_CUSTOMER INTO
            CID,
            CNAME;
        EXIT WHEN C_CUSTOMER%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(CID
                             || ' '
                             || CNAME);
    END LOOP;

    CLOSE C_CUSTOMER;
END;


=============PACKAGES=======
===>Package specification

create or replace PACKAGE STUDENT_MODULE AS
    PROCEDURE GET_STUDENT_DATA(Code IN NUMBER,OUTPUT OUT SYS_REFCURSOR);
END STUDENT_MODULE;


==>Package Body


CREATE OR REPLACE PACKAGE BODY STUDENT_MODULE AS

 PROCEDURE GET_STUDENT_DATA(Code IN NUMBER,OUTPUT OUT SYS_REFCURSOR) 
AS 
BEGIN
OPEN OUTPUT FOR 
select  
SM.Student_Code AS STUDENT_CODE,
SM.STUDENT_NAME,
SMR.Subject1,
SMR.SUBJECT2,
SMR.SUBJECT3 
from STUDENT_MASTERS SM 
INNER JOIN STUDENT_MARKS SMR ON SM.STUDENT_CODE=SMR.STUDENT_CODE
WHERE SM.Student_Code=Code;
END GET_STUDENT_DATA;
END STUDENT_MODULE;
/


